package Skripsi;

import Table.TableModel;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

/**
 *
 * @author Abdurasyid
 */
public class GUI extends javax.swing.JFrame {

    private ReadFile read;
    private Preprocessing preprocess;
    private VectorSpaceModel vsm;
    private ImprovedKMeans ikm;
    private ArrayList<String> final_term;
    private HashMap<String, String> term_join;
    private Map<String, String> dataMap, term_doc;
    private Set<String> temp;
    private String[] columnNames;
    private double[][] VSM;
    private int termNumber, docNumber;

    /**
     * Creates new form GUI
     */
    public GUI() {
        read = new ReadFile();
        dataMap = read.getDataMap();
        term_join = new HashMap<>();
        final_term = new ArrayList();
        temp = new HashSet<>();
        docNumber = dataMap.entrySet().size();
        columnNames = new String[(1 + docNumber)];

        initComponents();
        readData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subFrame = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        removeTag = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        removeNumberPunctuation = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        caseFolding = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tokenization = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        removeStopword = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        stemming = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        TF = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        WF = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        IDF = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        WF_IDF = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        Norm_WF_IDF = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        euclideanDistance = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        MeanDist = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        density = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        highDensity = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        MeanDens = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        alphaMeanDens = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        highDensData = new javax.swing.JTable();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        initialCentroid = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        clusterResult = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel20 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        silhouetteCoefficient = new javax.swing.JTextField();
        jScrollPane19 = new javax.swing.JScrollPane();
        silhouetteCoefficientDetail = new javax.swing.JTextArea();
        jPanel23 = new javax.swing.JPanel();
        purity = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        purityDetail = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        data = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cluster = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        alpha = new javax.swing.JTextField();
        process = new javax.swing.JButton();

        subFrame.setResizable(false);
        subFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                subFrameWindowClosing(evt);
            }
        });

        jLabel5.setText("Pengelompokkan dengan Menggunakan Improved K-Means");

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        removeTag.setEditable(false);
        removeTag.setColumns(20);
        removeTag.setLineWrap(true);
        removeTag.setRows(5);
        removeTag.setWrapStyleWord(true);
        jScrollPane2.setViewportView(removeTag);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Hapus Tag", jPanel8);

        removeNumberPunctuation.setEditable(false);
        removeNumberPunctuation.setColumns(20);
        removeNumberPunctuation.setLineWrap(true);
        removeNumberPunctuation.setRows(5);
        removeNumberPunctuation.setWrapStyleWord(true);
        jScrollPane3.setViewportView(removeNumberPunctuation);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Hapus Tanda Baca & Angka", jPanel9);

        caseFolding.setEditable(false);
        caseFolding.setColumns(20);
        caseFolding.setLineWrap(true);
        caseFolding.setRows(5);
        caseFolding.setWrapStyleWord(true);
        jScrollPane4.setViewportView(caseFolding);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Case Folding", jPanel10);

        tokenization.setEditable(false);
        tokenization.setColumns(20);
        tokenization.setLineWrap(true);
        tokenization.setRows(5);
        tokenization.setWrapStyleWord(true);
        jScrollPane5.setViewportView(tokenization);

        removeStopword.setEditable(false);
        removeStopword.setColumns(20);
        removeStopword.setLineWrap(true);
        removeStopword.setRows(5);
        removeStopword.setWrapStyleWord(true);
        jScrollPane6.setViewportView(removeStopword);

        stemming.setEditable(false);
        stemming.setColumns(20);
        stemming.setLineWrap(true);
        stemming.setRows(5);
        stemming.setWrapStyleWord(true);
        jScrollPane7.setViewportView(stemming);

        jLabel6.setText("Tokenisasi");

        jLabel7.setText("Hapus Stopword");

        jLabel8.setText("Stemming");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Tokenisasi, Hapus Stopword & Stemming", jPanel11);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Praproses Teks", jPanel4);

        TF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TF.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TF.setEnabled(false);
        jScrollPane9.setViewportView(TF);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Hitung TF", jPanel12);

        WF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        WF.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        WF.setEnabled(false);
        jScrollPane8.setViewportView(WF);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Hitung WF", jPanel13);

        IDF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        IDF.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        IDF.setEnabled(false);
        jScrollPane10.setViewportView(IDF);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Hitung IDF", jPanel14);

        WF_IDF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        WF_IDF.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        WF_IDF.setEnabled(false);
        jScrollPane11.setViewportView(WF_IDF);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Hitung WF.IDF", jPanel15);

        Norm_WF_IDF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Norm_WF_IDF.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Norm_WF_IDF.setEnabled(false);
        jScrollPane12.setViewportView(Norm_WF_IDF);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Hitung Normalisasi WF.IDF", jPanel16);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vector Space Model", jPanel5);

        euclideanDistance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        euclideanDistance.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        euclideanDistance.setEnabled(false);
        jScrollPane13.setViewportView(euclideanDistance);

        jLabel9.setText("Rata-rata Jarak Euclidean Distance");

        MeanDist.setEditable(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(MeanDist)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MeanDist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        jTabbedPane4.addTab("Hitung Jarak", jPanel17);

        jLabel10.setText("Nilai Seluruh Densitas Dokumen");

        jLabel11.setText("Dokumen dengan Densitas Tertinggi");

        density.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        density.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        density.setEnabled(false);
        jScrollPane14.setViewportView(density);

        highDensity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        highDensity.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        highDensity.setEnabled(false);
        jScrollPane15.setViewportView(highDensity);

        jLabel12.setText("Rata-rata Densitas");

        MeanDens.setEditable(false);
        MeanDens.setText("jTextField2");

        jLabel13.setText("Alpha x Rata-rata Densitas");

        alphaMeanDens.setEditable(false);
        alphaMeanDens.setText("jTextField1");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12)
                            .addComponent(MeanDens, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(jLabel13)
                            .addComponent(alphaMeanDens))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(jScrollPane15))
                        .addContainerGap())
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MeanDens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alphaMeanDens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane4.addTab("Hitung Densitas", jPanel19);

        highDensData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        highDensData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        highDensData.setEnabled(false);
        jScrollPane16.setViewportView(highDensData);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Data Dok dgn Densitas Tertinggi", jPanel21);

        initialCentroid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        initialCentroid.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        initialCentroid.setEnabled(false);
        jScrollPane17.setViewportView(initialCentroid);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Hasil Centroid Awal", jPanel22);

        clusterResult.setEditable(false);
        clusterResult.setColumns(20);
        clusterResult.setLineWrap(true);
        clusterResult.setRows(5);
        clusterResult.setWrapStyleWord(true);
        jScrollPane18.setViewportView(clusterResult);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Hasil Pengelompokkan", jPanel18);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Improved K-Means", jPanel6);

        jLabel14.setText("Rata-rata Silhouette Coefficient");

        silhouetteCoefficient.setEditable(false);
        silhouetteCoefficient.setText("jTextField1");

        silhouetteCoefficientDetail.setEditable(false);
        silhouetteCoefficientDetail.setColumns(20);
        silhouetteCoefficientDetail.setLineWrap(true);
        silhouetteCoefficientDetail.setRows(5);
        silhouetteCoefficientDetail.setWrapStyleWord(true);
        jScrollPane19.setViewportView(silhouetteCoefficientDetail);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(silhouetteCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(silhouetteCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        jTabbedPane5.addTab("Silhouette Coefficient", jPanel20);

        purity.setEditable(false);
        purity.setText("jTextField1");

        jLabel15.setText("Nilai Purity");

        purityDetail.setEditable(false);
        purityDetail.setColumns(20);
        purityDetail.setLineWrap(true);
        purityDetail.setRows(5);
        purityDetail.setWrapStyleWord(true);
        jScrollPane20.setViewportView(purityDetail);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane20)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(purity, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane20, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap())
        );

        jTabbedPane5.addTab("Purity", jPanel23);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Evaluasi", jPanel7);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout subFrameLayout = new javax.swing.GroupLayout(subFrame.getContentPane());
        subFrame.getContentPane().setLayout(subFrameLayout);
        subFrameLayout.setHorizontalGroup(
            subFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        subFrameLayout.setVerticalGroup(
            subFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Skripsi");
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jLabel1.setText("Data Dokumen Teks");

        data.setEditable(false);
        data.setColumns(20);
        data.setLineWrap(true);
        data.setRows(5);
        data.setToolTipText("");
        data.setWrapStyleWord(true);
        jScrollPane1.setViewportView(data);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jLabel2.setText("Improved K-Means");

        jLabel3.setText("Jumlah Klaster");

        cluster.setToolTipText("Masukkan jumlah klaster yang digunakan untuk melakukan pengelompokkan");

        jLabel4.setText("Nilai Alpha");

        alpha.setToolTipText("Masukkan nilai alpha dalam menentukan centroid awal klaster");
        alpha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                alphaKeyPressed(evt);
            }
        });

        process.setText("Proses");
        process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alpha, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(cluster))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(process)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(alpha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(process)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readData() {
        dataMap.entrySet().stream().forEach((data) -> {
            this.data.append(
                    data.getKey().replaceAll(".txt", "").toUpperCase() + "\n"
                    + data.getValue() + "\n"
            );
        });
    }

    private void preProcessing() {
        preprocess = new Preprocessing();

        dataMap.entrySet().stream().forEach((data) -> {
            String docTitle = data.getKey().replaceAll(".txt", "").toUpperCase();
            String removeTag = preprocess.removeTag(data.getValue());
            String removeNumberPunctuation = preprocess.removeNumberPunctuation(removeTag);
            String caseFolding = preprocess.caseFolding(removeNumberPunctuation);
            String[] tokenization = preprocess.tokenization(caseFolding);
            ArrayList<String> removeStopword = preprocess.removeStopwords(tokenization);
            ArrayList<String> stemming = preprocess.stemming(removeStopword);
            String join = "";

            for (int i = 0; i < stemming.size(); i++) {
                join = join + stemming.get(i) + " ";
                final_term.add(stemming.get(i));
            }
            term_join.put(docTitle, join);

            printRemoveTagResult(docTitle, removeTag);
            printRemoveNumberPunctuationResult(docTitle, removeNumberPunctuation);
            printCaseFoldingResult(docTitle, caseFolding);
            printTokenizationResult(docTitle, tokenization);
            printRemoveStopwordResult(docTitle, removeStopword);
            printStemmingResult(docTitle, stemming);

            removeStopword.clear();
            stemming.clear();
        });
    }

    private void generateTerm() {
        temp.addAll(final_term);
        final_term.clear();
        final_term.addAll(temp);
        Collections.sort(final_term);

        termNumber = final_term.size();
    }

    private void vsm() {
        term_doc = new TreeMap<>(term_join);
        vsm = new VectorSpaceModel(final_term, term_doc);

        setColumnNames(vsm.getDocName());

        VSM = vsm.VSM();

        printTFValue(vsm.getTF());
        printWFValue(vsm.getWeightTF());
        printIDFValue(vsm.getIDF());
        printWF_IDFValue(vsm.getWF_IDF());
        printNorm_WF_IDFValue(vsm.getNorm_WF_IDF());
    }

    private void improvedKMeans() {
        int k = Integer.parseInt(this.cluster.getText());
        double alpha = Double.parseDouble(this.alpha.getText());
        ikm = new ImprovedKMeans(VSM, alpha, k);

        ikm.improvedKMeans();

        ArrayList<Integer> indexHighDens = ikm.getIndexHighDensData();

        printEuclideanDistValue(ikm.getEuclideanDistance(), ikm.getMeanDist());
        printDensityValue(ikm.getDensity(), ikm.getMeanDens());
        printHigherDensityValue(indexHighDens, ikm.getHighDens());
        printHighDensData(indexHighDens, ikm.getHighDensData());
        printCentroidResult(k, indexHighDens, ikm.getIndexCentroid(), ikm.getInitialCentroid());
        printClusterResult(k, ikm.getCluster());

        alphaMeanDens.setText("" + ikm.getAplhaMeanDens());
    }

    private void silhouetteCoefficient() {
        int k = Integer.parseInt(this.cluster.getText());
        SilhouetteCoefficient sc = new SilhouetteCoefficient(k, ikm.getCluster(), ikm.getDistance());

        sc.doSilhouetteCoefficient();
        printSilhouetteCoefficient(sc, ikm.getCluster());
    }

    private void purity() {
        int k = Integer.parseInt(this.cluster.getText());
        int n = 0;
        String[] labelDoc = new String[term_doc.size()];

        for (Map.Entry<String, String> docName : term_doc.entrySet()) {
            labelDoc[n] = docName.getKey().replaceAll("DOC\\s\\(\\d+\\)-", "");
            n++;
        }
        Purity p = new Purity(k, labelDoc, ikm.getCluster());

        p.calculatePurity();
        printPurity(p);
    }

    private void printRemoveTagResult(String docTitle, String removeTag) {
        this.removeTag.append(
                docTitle + "\n"
                + removeTag + "\n"
        );
    }

    private void printRemoveNumberPunctuationResult(String docTitle, String removeNumberPunctuation) {
        this.removeNumberPunctuation.append(
                docTitle + "\n"
                + removeNumberPunctuation + "\n\n"
        );
    }

    private void printCaseFoldingResult(String docTitle, String caseFolding) {
        this.caseFolding.append(
                docTitle + "\n"
                + caseFolding + "\n\n"
        );
    }

    private void printTokenizationResult(String docTitle, String[] tokenization) {
        this.tokenization.append(
                docTitle + "\n"
        );
        for (String token : tokenization) {
            this.tokenization.append(
                    token + "\n"
            );
        }
        this.tokenization.append("\n");
    }

    private void printRemoveStopwordResult(String docTitle, ArrayList<String> removeStopword) {
        this.removeStopword.append(
                docTitle + "\n"
        );
        removeStopword.stream().forEach((token) -> {
            this.removeStopword.append(
                    token + "\n"
            );
        });
        this.removeStopword.append("\n");
    }

    private void printStemmingResult(String docTitle, ArrayList<String> stemming) {
        this.stemming.append(
                docTitle + "\n"
        );
        stemming.stream().forEach((token) -> {
            this.stemming.append(
                    token + "\n"
            );
        });
        this.stemming.append("\n");
    }

    private void printTFValue(double[][] TF) {
        Object[][] tf = new Object[termNumber][(1 + docNumber)];

        for (int i = 0; i < tf.length; i++) {
            tf[i][0] = final_term.get(i);

            for (int j = 1; j < tf[0].length; j++) {
                tf[i][j] = TF[i][(j - 1)];
            }
        }
        this.TF.setModel(new TableModel(getColumnNames(), tf));
    }

    private void printWFValue(double[][] WF) {
        Object[][] wf = new Object[termNumber][(1 + docNumber)];

        for (int i = 0; i < wf.length; i++) {
            wf[i][0] = final_term.get(i);

            for (int j = 1; j < wf[0].length; j++) {
                wf[i][j] = WF[i][(j - 1)];
            }
        }
        this.WF.setModel(new TableModel(getColumnNames(), wf));
    }

    private void printIDFValue(double[] IDF) {
        Object[][] idf = new Object[termNumber][2];
        String[] colNames = {"Term", "IDF"};

        for (int i = 0; i < idf.length; i++) {
            idf[i][0] = final_term.get(i);
            idf[i][1] = IDF[i];
        }
        this.IDF.setModel(new TableModel(colNames, idf));
    }

    private void printWF_IDFValue(double[][] WF_IDF) {
        Object[][] wf_idf = new Object[termNumber][(1 + docNumber)];

        for (int i = 0; i < wf_idf.length; i++) {
            wf_idf[i][0] = final_term.get(i);

            for (int j = 1; j < wf_idf[0].length; j++) {
                wf_idf[i][j] = WF_IDF[i][(j - 1)];
            }
        }
        this.WF_IDF.setModel(new TableModel(getColumnNames(), wf_idf));
    }

    private void printNorm_WF_IDFValue(double[][] Norm_WF_IDF) {
        Object[][] norm_wf_idf = new Object[termNumber][(1 + docNumber)];

        for (int i = 0; i < norm_wf_idf.length; i++) {
            norm_wf_idf[i][0] = final_term.get(i);

            for (int j = 1; j < norm_wf_idf[0].length; j++) {
                norm_wf_idf[i][j] = Norm_WF_IDF[i][(j - 1)];
            }
        }
        this.Norm_WF_IDF.setModel(new TableModel(getColumnNames(), norm_wf_idf));
    }

    private void printEuclideanDistValue(double[][] euclideanDist, double meanDist) {
        String[] columnNames = getColumnNames();
        columnNames[0] = "d(i,j)";
        Object[][] euclideanDistance = new Object[docNumber][(1 + docNumber)];

        for (int i = 0; i < euclideanDistance.length; i++) {
            euclideanDistance[i][0] = columnNames[i + 1];

            for (int j = 1; j < euclideanDistance[0].length; j++) {
                euclideanDistance[i][j] = euclideanDist[i][(j - 1)];
            }
        }
        this.euclideanDistance.setModel(new TableModel(columnNames, euclideanDistance));
        MeanDist.setText("" + meanDist);
    }

    private void printDensityValue(int[] dens, double MeanDens) {
        String[] columnNames = {"Dokumen", "Nilai Densitas"};
        String[] docNames = getColumnNames();
        Object[][] density = new Object[docNumber][2];

        for (int i = 0; i < density.length; i++) {
            density[i][0] = docNames[i + 1];

            for (int j = 1; j < density[0].length; j++) {
                density[i][j] = dens[i];
            }
        }
        this.density.setModel(new TableModel(columnNames, density));
        this.MeanDens.setText("" + MeanDens);
    }

    public void printHigherDensityValue(ArrayList<Integer> indexHighDens, ArrayList<Integer> highDens) {
        String[] columnNames = {"Dokumen", "Nilai Densitas"};
        String[] docNames = getColumnNames();
        Object[][] highDensity = new Object[highDens.size()][2];

        for (int i = 0; i < highDensity.length; i++) {
            highDensity[i][0] = docNames[indexHighDens.get(i) + 1];

            for (int j = 1; j < highDensity[0].length; j++) {
                highDensity[i][j] = highDens.get(i);
            }
        }
        this.highDensity.setModel(new TableModel(columnNames, highDensity));
    }

    private void printHighDensData(ArrayList<Integer> indexHighDens, double[][] highDensData) {
        String[] docNames = getColumnNames();
        String[] columnNames = new String[1 + indexHighDens.size()];
        columnNames[0] = "Term";
        Object[][] highDensityData = new Object[termNumber][1 + indexHighDens.size()];

        for (int i = 0; i < highDensityData.length; i++) {
            highDensityData[i][0] = final_term.get(i);

            for (int j = 1; j < highDensityData[0].length; j++) {
                columnNames[j] = docNames[indexHighDens.get(j - 1) + 1];
                highDensityData[i][j] = highDensData[i][j - 1];
            }
        }
        this.highDensData.setModel(new TableModel(columnNames, highDensityData));
    }

    private void printCentroidResult(int k, ArrayList<Integer> indexHighDens, ArrayList<Integer> indexCentroid, double[][] initialCentroid) {
        String[] docNames = getColumnNames();
        String[] columnNames = new String[1 + indexCentroid.size()];
        columnNames[0] = "Term";
        Object[][] centroid = new Object[termNumber][1 + k];

        for (int i = 0; i < centroid.length; i++) {
            centroid[i][0] = final_term.get(i);

            for (int j = 1; j < centroid[0].length; j++) {
                columnNames[j] = docNames[indexHighDens.get(indexCentroid.get(j - 1)) + 1];
                centroid[i][j] = initialCentroid[i][j - 1];
            }
        }
        this.initialCentroid.setModel(new TableModel(columnNames, centroid));
    }

    private void printClusterResult(int k, ArrayList<Integer> clusterResult) {
        String[] docName = getColumnNames();

        for (int cluster = 0; cluster < k; cluster++) {
            for (int i = 0; i < clusterResult.size(); i++) {
                if (cluster == clusterResult.get(i)) {
                    this.clusterResult.append(
                            docName[i + 1] + " | Posisi klaster: " + (clusterResult.get(i) + 1) + "\n"
                    );

                    for (Map.Entry<String, String> data : dataMap.entrySet()) {
                        String content = data.getKey().replaceAll(".txt", "").toUpperCase();

                        if (docName[i + 1].equals(content)) {
                            String title = data.getValue().replaceAll("<ABSTRAK>(.+?)<\\/ABSTRAK>", "");
                            String abstrac = data.getValue().replaceAll("<JUDUL>(.+?)<\\/JUDUL>", "Abstrak:");

                            this.clusterResult.append(
                                    "Judul:" + "\n"
                                    + title.replaceAll("<JUDUL>|</JUDUL>", "")
                                    + abstrac.replaceAll("<ABSTRAK>|</ABSTRAK>", "")
                                    + "--------------------------------------------\n\n"
                            );
                        }
                    }
                }
            }
        }
    }

    private void printSilhouetteCoefficient(SilhouetteCoefficient sc, ArrayList<Integer> clusterResult) {
        String[] docName = getColumnNames();
        double[] silhouetteCoefficientDetail = sc.getSilhouetteCoefficientDoc();

        for (int i = 0; i < silhouetteCoefficientDetail.length; i++) {
            this.silhouetteCoefficientDetail.append(
                    docName[i + 1] + " | Klaster "
                    + (clusterResult.get(i) + 1) + "\n Nilai Silhouette Coefficient: "
                    + silhouetteCoefficientDetail[i] + "\n"
                    + "----------------------------\n\n"
            );
        }

        silhouetteCoefficient.setText(sc.getAVGSilhouette() + "");
    }

    private void printPurity(Purity p) {
        String[] label = p.getLabel();
        int[][] countLabel = p.getCountLabel();

        for (int i = 0; i < countLabel.length; i++) {
            purityDetail.append(
                    "Klaster " + (i + 1)
                    + "\n---------------\n"
            );
            for (int j = 0; j < countLabel[0].length; j++) {
                purityDetail.append(
                        "Jumlah Label " + label[j] + "\t= " + countLabel[i][j] + "\n"
                );
            }
            purityDetail.append(
                    "----------------------------------------------\n\n"
            );
        }
        purity.setText(p.getPurity() + "");
    }

    private void setColumnNames(String[] docName) {
        columnNames[0] = "Term";
        for (int i = 1; i < columnNames.length; i++) {
            columnNames[i] = docName[(i - 1)];
        }
    }

    private String[] getColumnNames() {
        return columnNames;
    }

    private void clearSubFrame() {
        removeTag.setText(null);
        removeNumberPunctuation.setText(null);
        caseFolding.setText(null);
        tokenization.setText(null);
        removeStopword.setText(null);
        stemming.setText(null);
        clusterResult.setText(null);
        silhouetteCoefficientDetail.setText(null);
        purityDetail.setText(null);
    }

    private void processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processActionPerformed
        this.setEnabled(false);
        subFrame.setVisible(true);
        subFrame.setSize(1000, 700);

        preProcessing();
        generateTerm();
        vsm();
        improvedKMeans();
        silhouetteCoefficient();
        purity();
    }//GEN-LAST:event_processActionPerformed

    private void subFrameWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_subFrameWindowClosing
        this.setEnabled(true);

        clearSubFrame();
    }//GEN-LAST:event_subFrameWindowClosing

    private void alphaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alphaKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            processActionPerformed(null);
        }
    }//GEN-LAST:event_alphaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable IDF;
    private javax.swing.JTextField MeanDens;
    private javax.swing.JTextField MeanDist;
    private javax.swing.JTable Norm_WF_IDF;
    private javax.swing.JTable TF;
    private javax.swing.JTable WF;
    private javax.swing.JTable WF_IDF;
    private javax.swing.JTextField alpha;
    private javax.swing.JTextField alphaMeanDens;
    private javax.swing.JTextArea caseFolding;
    private javax.swing.JTextField cluster;
    private javax.swing.JTextArea clusterResult;
    private javax.swing.JTextArea data;
    private javax.swing.JTable density;
    private javax.swing.JTable euclideanDistance;
    private javax.swing.JTable highDensData;
    private javax.swing.JTable highDensity;
    private javax.swing.JTable initialCentroid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JButton process;
    private javax.swing.JTextField purity;
    private javax.swing.JTextArea purityDetail;
    private javax.swing.JTextArea removeNumberPunctuation;
    private javax.swing.JTextArea removeStopword;
    private javax.swing.JTextArea removeTag;
    private javax.swing.JTextField silhouetteCoefficient;
    private javax.swing.JTextArea silhouetteCoefficientDetail;
    private javax.swing.JTextArea stemming;
    private javax.swing.JFrame subFrame;
    private javax.swing.JTextArea tokenization;
    // End of variables declaration//GEN-END:variables
}
